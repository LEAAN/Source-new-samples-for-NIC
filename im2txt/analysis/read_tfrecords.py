'''
This script reads tfrecords that contain info on COCO data, created by im2txt/data/build_mscoco_data.py.
'''

from __future__ import absolute_import
from __future__ import division
import tensorflow as tf
import argparse


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--tfrecordDirectory',
                        help='Path to tfrecords that are generated by im2txt/data/build_mscoco_data.py.\n \
                             exampler path can be "/mnt/raid/data/ni/dnn/zlian/Google_image/train-00007-of-00008"',
                        default='/mnt/raid/data/ni/dnn/zlian/Google_image/train-00007-of-00008')
    args = parser.parse_args()

    image_feature = "image/data"
    caption_feature = "image/caption_ids"

    # Reader for the input data.
    reader = tf.TFRecordReader()
    filenames = [args.tfrecordDirectory]

    print ('Open TF records from {0}'.format(filenames))

    filename_queue = tf.train.string_input_producer(filenames, shuffle=False)
    key, value = reader.read(filename_queue)
    context, sequence = tf.parse_single_sequence_example(
        value,
        context_features={
            image_feature: tf.FixedLenFeature([], dtype=tf.string)
        },
        sequence_features={
            caption_feature: tf.FixedLenSequenceFeature([], dtype=tf.int64),
        })

    encoded_image = context[image_feature]
    caption = sequence[caption_feature]

    with tf.Session() as sess:
        coord = tf.train.Coordinator()
        threads = tf.train.start_queue_runners(coord=coord)
        # set the number of sample tfrecord to be printed out.
        n_checking=1
        for i in range(n_checking):
            print '+++++++++ A tfrecord of image caption pair +++++++++.'
            print 'The ground truth caption is encoded into a list of integers:'
            print caption.eval()
            print 'The image is encoded into {0}'.format(type(encoded_image.eval()))
        coord.request_stop()
        coord.join(threads)

if __name__ == "__main__":
    main()




