'''
This script reads tfevents generated by the im2txt/ops/evaluate.py,
 and prints perplexity values of the model trained by train.py or train_wrapper.py
'''
import argparse
from im2txt import utils
from tensorflow.python.summary import event_accumulator


def eventaccumulator(path, find, savingpath=None):
    ea = event_accumulator.EventAccumulator(path)
    ea.Reload()  # loads events from file
    print ea.Tags()
    # print type(ea.Scalars(find)) # Is list
    # print (ea.Scalars(find)[0]).step, (ea.Scalars(find)[0]).value
    print ('Get {0} values from {1}'.format(find, path))
    values=['From: '+path]
    for item in ea.Scalars(find):
        step=item.step
        value=item.value
        print (step,value)
        values.append((step,value))
    if savingpath:
        utils.save(values,savingpath,info='Save {0} from {1} to {2}'.format(find,path,savingpath))

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--inputDirectory',
                        help='Path to tfevents that are generated by im2txt/ops/evaluate.py and contain perplexity values.')
    parser.add_argument('--outputDirectory',
                    help='Path to which the retrieved perplexity values are saved')
    args = parser.parse_args()
    eventaccumulator(path=args.inputDirectory, find='Perplexity', savingpath=args.outputDirectory)


if __name__ == "__main__":
    main()

